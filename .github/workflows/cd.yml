name: CD golang
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
jobs:
  testing:
    runs-on: ubuntu-latest
    name: "ini unitest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: run unit test
        run: go test -v ./...
      - name: run linting
        uses: golangci/golangci-lint-action@v3

  deploy:
    runs-on: ubuntu-latest
    name: "ini deploy"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: rafliferdian/dompet-miniproject
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: update aws instance
        if: github.ref != 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_AWS }}
          username: ubuntu
          key: ${{ secrets.KEY_AWS }}
          port: 22
          script: |
            sudo docker stop app
            sudo docker container rm app
            sudo docker pull rafliferdian/dompet-miniproject:${{ steps.meta.outputs.tags }}
            sudo docker run -d -v $PWD/.env:/.env -p 80:6969 --name app rafliferdian/dompet-miniproject:${{ steps.meta.outputs.tags }}